#!/usr/bin/env python

import os
import sys

def main():
    root = module_space()
    import_paths = (
        special_import_paths(root) +
        module_space_import_paths(root)
    )
    sys.path.extend(import_paths)
    import guild.gpkg_main
    guild.gpkg_main.main()

def module_space():
    module_space = os.path.abspath(sys.argv[0]) + '.runfiles'
    if os.path.isdir(module_space):
        return module_space
    runfiles_pattern = "(.*\.runfiles)/.*"
    m = re.match(runfiles_pattern, os.path.abspath(sys.argv[0]))
    if m:
        return m.group(1)
    raise AssertionError('Cannot find .runfiles directory for %s' % sys.argv[0])

def special_import_paths(root):
    return [
        os.path.join(root, "protobuf/python"),
        os.path.join(root, yaml_path_for_python_version()),
    ]

def yaml_path_for_python_version():
    major_ver = sys.version_info[0]
    if major_ver == 2:
        return "org_pyyaml/lib"
    elif major_ver == 3:
        return "org_pyyaml/lib3"
    else:
        raise AssertionError("Unsupported Python version for YAML: %i" % major_ver)

def module_space_import_paths(root):
    root_files = [os.path.join(root, d) for d in os.listdir(root)]
    return [repo for repo in root_files if os.path.isdir(repo)]

if __name__ == '__main__':
    main()
